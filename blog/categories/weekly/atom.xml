<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: weekly | 唐巧的技术博客]]></title>
  <link href="http://blog.devtang.com/blog/categories/weekly/atom.xml" rel="self"/>
  <link href="http://blog.devtang.com/"/>
  <updated>2015-04-24T21:01:44+08:00</updated>
  <id>http://blog.devtang.com/</id>
  <author>
    <name><![CDATA[唐巧]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第43期]]></title>
    <link href="http://blog.devtang.com/blog/2015/04/24/ios-weekly-43/"/>
    <updated>2015-04-24T20:59:43+08:00</updated>
    <id>http://blog.devtang.com/blog/2015/04/24/ios-weekly-43</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，首发地址为：<a href="http://www.infoq.com/cn/news/2015/04/ios-weekly-wwdc">文章链接</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期 iOS 移动开发周报带来如下内容：WWDC 2015 将于 6 月 8 日在旧金山开幕、react-native 之布局篇、iOS 应用架构谈、iOS 证书及 ipa 包重签名探究、开源项目Kingfisher和samurai-native等。</p>

<h2>新闻</h2>

<ol>
<li><p><a href="http://tech.sina.com.cn/it/2015-04-14/doc-iavxeafs5472422.shtml">《WWDC 2015 将于 6 月 8 日在旧金山开幕》</a>：苹果于 4 月 14 日宣布，将于 6 月 8 日至 6 月 12 日在旧金山召开第 26 届年度全球开发者大会 (WWDC)。预计大会上将会发布 iOS 9 新版移动系统及用于 Mac 电脑的新版 OS X 系统。鉴于 Apple Watch 的重要性，这次也许苹果会将更多精力放在自己的智能手表生态建设上。苹果每次邀请函设计或多或少都有隐藏含义，本次方圆融合也许就体现了手表的特点。</p></li>
<li><p><a href="http://www.macrumors.com/2015/04/13/ios-8-3-ifunbox-itools-sandbox-app-access/">《iOS 8.3 阻止了 iFunBox, iExplorer 等软件》</a>：苹果对 iOS 8.3 加强了安全性，阻止了 iFunBox, iExplorer 等软件来连接到 iOS 设备进行相应的管理操作。</p></li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="https://github.com/tmallfe/tmallfe.github.io/issues/19">《react-native 之布局篇》</a>：来自天猫的 @sysu_ 学家 同学实践并整理了一篇关于 React Native 的文章，详细丰富的介绍了 React Native 布局的知识。</p></li>
<li><p><a href="http://casatwy.com/iosying-yong-jia-gou-tan-kai-pian.html">《iOS 应用架构谈：开篇》</a>：对于 iOS 客户端应用的架构来说，复杂度不亚于服务端，但侧重点和入手点却跟服务端不太一样。本系列文章作者会主要专注在 iOS 应用架构方面，很多方案也是基于 iOS 技术栈的特点而建立的。本文是该系列第一篇。</p></li>
<li><p><a href="http://answerhuang.duapp.com/index.php/2015/04/19/jenkins/">《我是怎么慢慢变懒的 : Jenkins + 蒲公英》</a>：任何工具出现的最初目的都是为了提高生产效率，很庆幸在 iOS 开发的这个圈子中有一大批的先驱者，他们创造并开源了很多优秀的工具，为这个环境奠定了一个良好的基础。本文作者 <a href="http://weibo.com/u/1623064627?s=6cm7D0">@answer-huang</a> 介绍了使用 Jenkins 和蒲公英来完成自动打包和分发测试包的工作。</p></li>
<li><p><a href="http://www.olinone.com/?p=198">《iOS 证书及 ipa 包重签名探究》</a>：本文重点在于介绍 ios8.1.3 系统 ipa 包重签名 (如企业证书) 无法安装的问题。苹果在 iOS8.1.3 系统以后加强了对 ipa 安装包签名的验证，主要区别在于 ipa 唯一标识在原有 Bundle Identifier 的基础上增加了证书 ID，也就说安装包和手机上已安装 APP 的 Bundle Identifier 即使一致，如果两者签名的证书 ID 不相同，那么安装包也无法正常安装。</p></li>
<li><p><a href="http://blog.knownsec.com/2015/04/iphone-target-analysis-and-exploitation-with-apple(udid">《iPhone 目标分析及使用 UDID 实施入侵》</a>/#rd?sukey=39297060d6d3d5574bdeed79fcfba01fbb2ceffdf0f3c671c96b4ed2e8a9aaae9524899fc6554db13dd83b76d048f839)：iPhone 有一些强大而实用的功能，例如定位追踪和远程数据擦除。这其实都得益于它的唯一设备识别符 UDID（Unique Device Identifier）。本文描述了发掘 iPhone 目标终端设备、利用量子计划（QUANTUM）直接植入目标的标准分析技术，说明 iPhone 唯一设备识别符（Unique Device Identifier，简称 UDID）可以用于追踪目标或与终端设备及目标电话相关联，强调该入侵技术目前可以实现并实施进一步定位的 CNE 过程。</p></li>
<li><p><a href="http://apple.stackexchange.com/questions/176555/how-do-i-make-multiple-screen-recordings-with-the-exact-same-portion-of-the-scre/176595#176595">《录屏技巧》</a>：本文介绍了用 Swift 打开 QuickTime Player 录制指定区域的奇技淫巧。</p></li>
</ol>


<h2>工具</h2>

<ol>
<li><a href="https://github.com/burczyk/XcodeSwiftSnippets">XcodeSwiftSnippets</a>：XcodeSwiftSnippets 提供了很多可在 Xcode 上使用的 Swift 语言的代码片段 , 通过自动补全的方式，可以极大的提高开发效率。</li>
</ol>


<h2>开源项目</h2>

<ol>
<li><p><a href="https://github.com/onevcat/Kingfisher">Kingfisher</a>：Kingfisher 是一个用于图片缓存的开源库，类似  SDWebImage，但是完全基于 Swift 语言开发。</p></li>
<li><p><a href="https://github.com/hackers-painters/samurai-native">samurai-native</a>：samurai-native 是 <a href="http://weibo.com/u/1641892107?topnav=1&amp;wvr=6&amp;topsug=1">@ 老郭为人民服务</a> 开源的一套新的构建 App 框架，可以使用 HTML 和 CSS 来生成原生的应用界面。</p></li>
<li><p><a href="https://github.com/boycechang/BCMagicTransition">BCMagicTransition</a>：BCMagicTransition 是一个动效框架，用于自定义 UINavigationController 的切换动画，效果类似 Keynote 软件中 Magic Move 切换。它可以用于任意两个 UIViewController 之间，只需指定两个 VC 中的相同元素即可。</p></li>
<li><p><a href="cikelengfeng/RPAXU">Refresh Plugins After Xcode Upgrading</a>：每当 Xcode 升级之后，都会导致原有的 Xcode 插件不能使用，这是因为每个插件的 Info.plist 中记录了该插件兼容的 Xcode 版本的 DVTPlugInCompatibilityUUID，而每个版本的 Xcode 的 DVTPlugInCompatibilityUUID 都是不同的。如果想让原来的插件继续工作，我们就得将新版 Xcode 的 DVTPlugInCompatibilityUUID 加入到每一个插件的 Info 文件中，手动添加的话比较费时间还可能出错，所以作者写了一个脚本来做这件事。</p></li>
<li><p><a href="https://github.com/ResearchKit/ResearchKit">ResearchKit</a>：ResearchKit 是苹果开源的方便科研机构创建 App 的框架。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第42期]]></title>
    <link href="http://blog.devtang.com/blog/2015/04/09/ios-weekly-42/"/>
    <updated>2015-04-09T22:15:52+08:00</updated>
    <id>http://blog.devtang.com/blog/2015/04/09/ios-weekly-42</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，首发地址为：<a href="http://www.infoq.com/cn/news/2015/04/facebook-react-native">文章链接</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期 iOS 移动开发周报带来如下内容：Facebook 正式开源 React Native、React 入门实例教程、React Native 通信机制详解等。</p>

<h2>新闻</h2>

<ol>
<li><p><a href="http://www.csdn.net/article/2015-03-27/2824323-facebook-open-sources-react-native">用 JavaScript 开发移动原生应用，Facebook 正式开源 React Native</a>：Facebook 正式开源了 <a href="https://github.com/facebook/react-native">React Native</a>，不过目前，只有 iOS 版，Android 版还需再等一段时间，这是最新的用 JavaScript 语言开发原生 App 的尝试。Facebook 同时还为 React Native 开发了一款基于 Atom 的 IDE：Nuclide，也已开源。</p></li>
<li><p><a href="http://weibo.com/p/1001603823955516487761">谷歌发现用于中间人攻击的证书</a>：根据谷歌官方安全博客报道，谷歌发现 CNNIC 颁发了多个针对谷歌域名的用于中间人攻击的证书。该证书冒充成受信任的谷歌的域名，被用于部署到网络防火墙中，用于劫持所有处于该防火墙后的 HTTPS 网络通信，而绕过浏览器警告。</p></li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://www.jianshu.com/p/1bde36ad9938">《轻松学习 Objective-C 消息转发》</a>：作者在文章中通过一个小例子来讲解什么是消息转发，以及如何消息转发，希望看完这篇文章时大家会彻底的明白 OC 的消息转发机制。</p></li>
<li><p><a href="http://www.ruanyifeng.com/blog/2015/03/react.html">《React 入门实例教程》</a>：React 起源于 Facebook 的内部项目，因为该公司对市场上所有 JavaScript MVC 框架，都不满意，就决定自己写一套，用来架设 Instagram 的网站。本文是阮一峰原创的入门教程。</p></li>
<li><p><a href="http://blog.cnbang.net/tech/2698/">《React Native 通信机制详解》</a>：React Native 是 facebook 刚开源的框架，可以用 javascript 直接开发原生 APP，先不说这个框架后续是否能得到大众认可，单从源码来说，这个框架源码里有非常多的设计思想和实现方式值得学习，本文介绍了它最基础的 JavaScript-ObjectC 通信机制。</p></li>
<li><p><a href="http://onevcat.com/2015/03/cross-platform/">《跨平台开发时代的 (再次) 到来？》</a>：这篇文章主要想谈谈最近又刮起的移动开发跨平台之风，并着重介绍和对比一下像是 Xamarin，NativeScript 和 React Native 之类的东西。</p></li>
<li><p><a href="http://blog.devtang.com/blog/2015/03/22/ios-dev-controversy-2/">《iOS 开发中的争议（二）》</a>：本文作者分享了 iOS 中的一个争议话题：对于 UI 界面的编写工作，到底应该用 xib/storyboard 完成，还是用手写代码来完成？</p></li>
<li><p><a href="http://tanqisen.github.io/blog/2013/04/19/gcd-block-cycle-retain/">《正确使用 Block 避免 Cycle Retain 和 Crash》</a>：Block 作为 C 语言的扩展，并不是高新技术，和其他语言的闭包或 lambda 表达式是一回事。需要注意的是由于 Objective-C 在 iOS 中不支持 GC 机制，使用 Block 必须自己管理内存，而内存管理正是使用 Block 坑最多的地方，错误的内存管理 要么导致 return cycle 内存泄漏要么内存被提前释放导致 crash。本文介绍了从 Block 实现原理切入，介绍了使用 Block 需要注意的地方。</p></li>
<li><p><a href="http://tutuge.me/2015/03/29/bind-data-to-gcd-queue/">《为 GCD 队列绑定 NSObject 类型上下文数据-利用 __bridge_retained(transfer) 转移内存管理权》</a>：本文介绍了如何合理运用 <code>__bridge_retained(transfer)</code> 关键字转换对象的内存管理权，让我们自己控制对象的生命周期。</p></li>
<li><p><a href="http://staltz.com/dont-react/#/">《Don&rsquo;t React》</a>：本文作者从多方面分享了他对于 React 框架的负面看法。通过此文，大家可以更加客观地了解 React 这个框架。</p></li>
</ol>


<h2>开源项目</h2>

<ol>
<li><p><a href="https://developer.apple.com/library/ios/samplecode/Lister/Introduction/Intro.html">Lister</a>：Lister 是苹果提供的官方 Demo。包含了 iOS、Mac 和 Apple Watch 版本，并且为这个 demo 分别用 Objective-C 和 Swift 实现了一遍，最后还包括了 30 页的文档。</p></li>
<li><p><a href="https://github.com/iSimar/HackerNews-React-Native">HackerNews-React-Native</a>：HackerNews-React-Native 是用 React Native 完成的 HackerNews 客户端。</p></li>
<li><p><a href="https://github.com/recruit-mp/RMPZoomTransitionAnimator">RMPZoomTransitionAnimator</a>：RMPZoomTransitionAnimator 是一个放大缩小的动效开源库，可以实现图片的放大缩小效果。</p></li>
<li><p><a href="https://github.com/adad184/MMTweenAnimation">MMTweenAnimation</a>：MMTweenAnimation 是一个基于 POP 的扩展，提供了 10 种自定义的动效。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第41期]]></title>
    <link href="http://blog.devtang.com/blog/2015/03/24/ios-weekly-41/"/>
    <updated>2015-03-24T16:22:45+08:00</updated>
    <id>http://blog.devtang.com/blog/2015/03/24/ios-weekly-41</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，首发地址为：<a href="http://www.infoq.com/cn/news/2015/03/evaluate-react-native">文章链接</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期 iOS 移动开发周报带来如下内容：如何评价 React Native、用纯代码构建一个 Widget、FastImageCache 解析等。</p>

<h2>新闻</h2>

<ol>
<li><p><a href="http://www.cocoachina.com/apple/20150310/11273.html">苹果推出 Apple Watch</a>：3 月 10 日，苹果公司 2015 年春季发布会在美国旧金山芳草地艺术中心召开。苹果在会上宣布推出 Apple Watch，续航时间为 18 小时。Apple Watch 将于 4 月 10 日开始预售，4 月 24 日开始发货。首批发售区域包含中国。</p></li>
<li><p><a href="http://www.csdn.net/article/2015-03-13/2824206-cocoapods-036-adds-swift-framework">CocoaPods 0.36 正式发布，实现 Swift 和 iOS 8 动态框架支持</a>：CocoaPods 于近日发布了 CocoaPods 0.36 正式版，其最大的改动便是为 iOS 引入了动态框架，并增加了对 AlamoFire、SwiftyJSON 等使用 Swift 所编写的库的支持，此举将影响包括 CocoaPods/Xcodeproj 在内的所有 CocoaPods gems。</p></li>
<li><p><a href="http://weibo.com/1989324563/C8khmrwB3?ref=&amp;type=comment#_rnd1426425896500">苹果开始整治 iMessage 垃圾信息</a>：苹果在最新的 iOS 更新中，集成了更加方便的举报 iMessage 垃圾信息的功能。这将使得用户可以更方便地举报垃圾信息。</p></li>
<li><p><a href="http://www.cocoachina.com/programmer/20150316/11339.html">2014 iOS 开发者收入调查报告（二）：企业开发者篇</a>：本次调研以 CocoaChina 网站用户为基础，总样本数量为 3591，调研时间为 2014 年 12 月 16 日-2015 年 1 月 31 日。调查报告的内容涉及开发经验、工作年限、待遇和工资满意度。</p></li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://www.zhihu.com/question/27852694/answer/41704172">《如何评价 React Native？》</a>：来自知乎的这个回答详细介绍了 Facebook 即将开源的 React Native 的相关知识，包括核心实现、设计考虑、以及 React Native 的优势和劣势。</p></li>
<li><p><a href="http://www.jianshu.com/p/221507eb8590">《iOS 开发的一些小技巧篇一》</a>：<a href="http://weibo.com/u/2159267225?from=feed&amp;loc=nickname">@ 武蕴牛 x</a> 总结了 iOS 开发中的一些小技巧。</p></li>
<li><p><a href="http://www.jianshu.com/p/80ebbb1950ba">《iOS 开发的一些小技巧篇二》</a>：<a href="http://weibo.com/u/2159267225?from=feed&amp;loc=nickname">@ 武蕴牛 x</a> 总结了 iOS 开发中的关于截图的技巧。</p></li>
<li><p><a href="http://adad184.com/2014/10/29/2014-10-29-how-to-setup-today-extension-programmatically/">《如何用纯代码构建一个 Widget(today extension)》</a>：随着 iOS8 的发布，各种 iPhone 的新玩法出现了，其中最引人关注的就是 today extension(也叫做 widget)。网上有很多相关的文章教你如何编写一个简单的 widget，但是却没有一篇适合我们这种纯代码的拥趸。本文介绍了如何用纯代码的方式来构建一个 widget。</p></li>
<li><p><a href="http://blog.cnbang.net/tech/2578/">《iOS 图片加载速度极限优化—FastImageCache 解析》</a>：FastImageCache 是 Path 团队开发的一个开源库，用于提升图片的加载和渲染速度，让基于图片的列表滑动起来更顺畅，本文分析了它的实现方式。</p></li>
<li><p><a href="http://www.cocoachina.com/ios/20150318/11350.html">《Swift 语言 iOS 开发：CALayer 十则示例》</a>：我们在 iOS 应用中看到的都是视图，包括按钮视图、表视图、滑动条视图，还有可以容纳其他视图的父视图等。但你或许不知道在 iOS 中支撑起每个视图的是一个叫做 &ldquo; 图层（layer）&rdquo; 的类，确切地说是 CALayer。本文中您会了解 CALayer 及其工作原理，还有应用 CALayer 打造酷炫效果的十则示例，比如绘制矢量图形、渐变色，甚至是粒子系统。</p></li>
<li><p><a href="http://blog.devtang.com/blog/2015/03/15/ios-dev-controversy-1/">《iOS 开发中的争议（一）》</a>：作者在文章中讨论了关于 Objective-C 语言中如下问题的争议：类的成员变量应该如何定义？</p></li>
</ol>


<h2>工具</h2>

<ol>
<li><a href="https://github.com/qfish/QLImageset">QLImageset</a>：QLImageset 是一个 QuickLook 插件：快速预览 imageset 文件夹包含的图片及其尺寸。</li>
</ol>


<h2>开源项目</h2>

<ol>
<li><p><a href="https://github.com/Yalantis/Persei">Persei</a>：Persei 是一个在顶部显示或隐藏菜单的 Swift 开源库。</p></li>
<li><p><a href="https://github.com/bryankeller/BLKFlexibleHeightBar">BLKFlexibleHeightBar</a>：BLKFlexibleHeightBar 是一个使导航栏高度可以动态变化的 UI 库。</p></li>
<li><p><a href="https://github.com/hyperoslo/Form">Form</a>：Form 是一个方便开发者创建表单填写工作的 UI 库。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第40期]]></title>
    <link href="http://blog.devtang.com/blog/2015/03/10/ios-weekly-40/"/>
    <updated>2015-03-10T20:48:50+08:00</updated>
    <id>http://blog.devtang.com/blog/2015/03/10/ios-weekly-40</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，文章地址是<a href="http://www.infoq.com/cn/news/2015/03/implementation-of-kvo">这里</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期 iOS 移动开发周报带来如下内容：iOS 开发者收入调查报告、如何自己动手实现 KVO、QQ 中未读气泡拖拽消失的实现分析、InfoQ 上移动端话题汇总、UIResponder 等。</p>

<h2>新闻</h2>

<ol>
<li><p><a href="http://www.cocoachina.com/apple/20150306/11250.html">《iPhone 6 再立功：中国区 iOS 份额历史新高》</a>：据来自 Kantar Worldpanel ComTech 的最新数据，截止至 2015 年一月的前三个月内，苹果 iOS 系统份额在中国区创历史新高，卖出的每四台智能手机就有一个是 iPhone。</p></li>
<li><p><a href="http://www.cocoachina.com/programmer/20150304/11205.html">《iOS 开发者收入调查报告（一）：个人开发者篇》</a>：2014 年 12 月，CocoaChina 以网上调查问卷形式发起了 “2014 iOS 开发者收入调查报告” 活动，得到了广大开发者的支持。在对问卷数据进行了整理分析后形成了本次调查报告，从而让我们对国内 iOS 开发者的收入和生存状态有一个大概的了解。本文是该调查的最终报告。</p></li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://tech.glowing.com/cn/implement-kvo/">《如何自己动手实现 KVO》</a>：KVO 是 Objective-C 对观察者模式（Observer Pattern）的实现。也是 Cocoa Binding 的基础。当被观察对象的某个属性发生更改时，观察者对象会获得通知。本文探究了 KVO (Key-Value Observing) 实现机制，并去实践一番：利用 Runtime 自己动手去实现 KVO 。</p></li>
<li><p><a href="http://kittenyang.com/drawablebubble/">《QQ 中未读气泡拖拽消失的实现分析》</a>：QQ 中针对强迫症有个很棒的交互，对于那些暂时不想理会的未读信息气泡，可以直接手指拖拽去掉。本文介绍了其实现方法。</p></li>
<li><p><a href="http://t.cn/Rw3he5x">《UITextView 编辑时插入自定义表情-简单的图文混编》</a>：在 iOS 开发中，经常需要用 UITextView 作为编辑文本的输入控件。但是如何在编辑时插入自定义表情呢？本文简单的用 NSTextAttachment、NSAttributedString 的特性，实现了在 UITextView 中编辑文字时插入自定义表情图片，同时可以返回带有表情 “替换符” 的纯文本字符串。</p></li>
<li><p><a href="http://tutuge.me/2015/02/19/%E6%8F%90%E5%8D%87UITableView%E6%80%A7%E8%83%BD-%E5%A4%8D%E6%9D%82%E9%A1%B5%E9%9D%A2%E7%9A%84%E4%BC%98%E5%8C%96/">《提升 UITableView 性能-复杂页面的优化》</a>：随着 App 的用户界面的内容越来越丰富，再强的手机可能都无法同时渲染复杂的 UI 界面和保证流畅的体验。本文分享了一些提升 UITableView 性能的技巧。</p></li>
<li><p><a href="http://weibo.com/p/1001603816757822408978">《InfoQ 上移动端话题汇总》</a>：<a href="http://weibo.com/ranwj">@ 移动开发小冉</a> 整理了一下 InfoQ 上关于移动方面的分享内容，涉及移动端架构、测试、流程优化等多方面的内容。</p></li>
<li><p><a href="http://blog.csdn.net/zhengminwudi/article/details/43916791">《 在非越狱的 iPhone 6 (iOS 8.1.3) 上进行钓鱼攻击 (盗取 App Store 密码)》</a>：iOS 逆向工程的一大应用场景是 iOS 安全。它既可以作为攻击的矛，也可以作为防御的盾。由蒸米带来的本文就是一则典型的以逆向工程为矛的案例，他对 CoreFoundation 里私有函数的运用画龙点睛，值得学习。</p></li>
<li><p><a href="http://southpeak.github.io/blog/2015/03/07/uiresponder/">《UIResponder》</a>：在 UIKit 中，IApplication、UIView、UIViewController 这几个类都是直接继承自 UIResponder 类。另外 SpriteKit 中的 SKNode 也是继承自 UIResponder 类。因此 UIKit 中的视图、控件、视图控制器，以及我们自定义的视图及视图控制器都有响应事件的能力。本文详细介绍了一个 UIResponder 类提供的基本功能。</p></li>
<li><p><a href="http://blog.sunnyxx.com/2015/03/01/todo-macro/">《实现一个 TODO 宏》</a>：文章介绍了如何实现一个能产生编译器警告的 TODO 宏，用于在代码里做备忘。</p></li>
</ol>


<h2>视频</h2>

<ol>
<li><a href="http://jlongster.com/First-Impressions-using-React-Native">《First Impressions using React Native》</a>：作者介绍了他使用 Facebook 即将开源的 React Native 的感受。</li>
</ol>


<h2>工具</h2>

<ol>
<li><p><a href="https://github.com/kstenerud/iOS-Universal-Framework">iOS-Universal-Framework</a>：iOS-Universal-Framework 是一个方便你将第三方 SDK 编译成 Framework 的开源工具。</p></li>
<li><p><a href="http://facebook.github.io/origami/">Origami</a>：Origami Live 支持在 iOS 设备上预览 Quartz Composer 项目，Origami 2.0 添加了导出 Objective-C、Java、JS 代码的功能，以后做原型效率更高了。由 <a href="http://weibo.com/lexrus">@ 汤圣罡</a> 推荐。</p></li>
</ol>


<h2>开源项目</h2>

<ol>
<li><a href="link">NativeScript</a>：NativeScript 是一个类似 React Native 的开源框架，使用 JavaScript 调用原生 API，构建原生应用，支持 iOS、 Android 和 WP 等多平台。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第39期]]></title>
    <link href="http://blog.devtang.com/blog/2015/03/01/ios-weekly-39/"/>
    <updated>2015-03-01T13:46:28+08:00</updated>
    <id>http://blog.devtang.com/blog/2015/03/01/ios-weekly-39</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，文章地址是<a href="http://www.infoq.com/cn/news/2015/02/core-image-introduction">这里</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期 iOS 移动开发周报带来如下内容：Core Image 介绍、写 iOS SDK 注意事项、利用 CocoaLumberjack 搭建自己的 Log 系统、KSHObjcUML 等。</p>

<h2>新闻</h2>

<ol>
<li><a href="http://www.williamlong.info/archives/4142.html">《Google 宣布淘汰 SPDY》</a>：Google 宣布计划淘汰该公司在 2009 年推出的 SPDY 协议，SPDY 原本定位为替代 HTTP 协议的新协议，Google 原本打算以它来加速 HTTP 的传输速度并推动成为标准，不过现在决定将支持 HTTP/2，并逐渐淘汰 SPDY，预计 2016 年就会完全从 Chrome 中移除对 SPDY 协议的支持。</li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://objccn.io/issue-21-6/">《Core Image 介绍》</a>：这篇文章为初学者介绍了 Core Image，一个 OS X 和 iOS 的图像处理框架。</p></li>
<li><p><a href="http://limboy.me/ios/2015/02/07/builder-pattern.html">《Builder Pattern 在 Objective-C 中的使用》</a>：作者从一个真实场景出发，介绍了结合 block 使用工厂模式的实践方式。</p></li>
<li><p><a href="http://blog.devtang.com/blog/2015/01/31/write-sdk-tips/">《写 iOS SDK 注意事项》</a>：我发现即使是像腾讯、小米这样的大厂提供的 SDK，在质量和规范上也有很多问题，文本分享了写 iOS SDK 注意事项。</p></li>
<li><p><a href="http://imtx.me/archives/1926.html">《CoreData 与 ReactiveCocoa 混用时要注意的线程问题》</a>：作者从一个 Crash 出发，分享了查找和修复问题的整个过程。</p></li>
<li><p><a href="http://www.jianshu.com/p/5adb536fd32b">《iOS 开发如何快速成长 ?》</a>：作者分享了自己的一些心得，包括：做有难度的项目、尽量少抱大腿、多读源码、多读国外的 iOS 开发网站和 blog、要孜孜不倦的学习。</p></li>
<li><p><a href="http://www.jianshu.com/p/f888db82fc27">《久违的的 LLDB 篇一，让 lldb 提升你的效率》</a>：作者分享了一些 LLDB 使用小技巧。</p></li>
<li><p><a href="http://nonomori.farbox.com/post/li-yong-cocoalumberjack-da-jian-zi-ji-de-log-xi-tong">《利用 CocoaLumberjack 搭建自己的 Log 系统》</a>：CocoaLumberjack 最早是由 Robbie Hanson 开发的日志库，可以在 iOS 和 MacOSX 开发上使用。其简单，快读，强大又不失灵活。本文介绍了利用 CocoaLumberjack 搭建自己的 Log 系统的过程。</p></li>
<li><p><a href="https://mikeash.com/pyblog/friday-qa-2015-02-20-lets-build-synchronized.html">《Let&rsquo;s Build @synchronized》</a>：本文讲解了 synchronized 关键字的内部实现原理。</p></li>
</ol>


<h2>视频</h2>

<ol>
<li><a href="http://realm.io/news/andy-matuschak-controlling-complexity/">《Controlling Complexity in Swift》</a>：本视频的作者来自 <a href="https://twitter.com/andy_matuschak">Andy Matuschak</a>，他曾在苹果 UIKit 组工作，在本视频中，他分享了用 Swift 来控制复杂度的经验。</li>
</ol>


<h2>工具</h2>

<ol>
<li><p><a href="https://github.com/kimsungwhee/KSHObjcUML">KSHObjcUML</a>：KSHObjcUML 是一个 Objective-C 类引用关系图的 Xcode 插件。作者是：<a href="http://weibo.com/u/2289288323">@kimsungwhee</a>。</p></li>
<li><p><a href="https://itunes.apple.com/app/id961651406">Xliffie</a>：Xliffie 是 <a href="http://weibo.com/lexrus">@ 汤圣罡</a> 推荐的一个本地化必备工具，它对 Xcode 生成的 Xliff 文件支持较好。</p></li>
</ol>


<p> <hr />
广告：亚马逊上正在销售我的《iOS开发进阶》签名版，输入优惠码<code>JXBEGSGKUV</code>，可在结帐时减7元，点击查看：<a href="http://www.amazon.cn/b?node=1474130071">购买链接</a>。</p>
]]></content>
  </entry>
  
</feed>
